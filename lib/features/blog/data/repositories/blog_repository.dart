import 'dart:async';

import '../endpoints/blog_api.dart';
import '../models/blog_model.dart';

class BlogRepository {
  static final BlogRepository _instance = BlogRepository._privateConstructor();

  BlogRepository._privateConstructor();

  factory BlogRepository() {
    return _instance;
  }

  final BlogApi blogApi = BlogApi.instance;

  static BlogRepository get instance => _instance;

  Future<List<BlogModel>> fetchBlogs() async {
    return await blogApi.getBlogs();
  }

  Future<BlogModel> fetchBlog(String blogId) async {
    return await blogApi.getBlog(blogId);
  }

  Future<void> createBlog(
      String title, String content, DateTime publishedAt) async {
    BlogModel newBlog = BlogModel(
      id: '', // Assuming the ID is generated by the backend
      title: title,
      content: content,
      publishedAt: publishedAt,
    );
    return await blogApi.createBlog(newBlog);
  }

  Future<void> updateBlog(BlogModel blogModel) async {
    return await blogApi.updateBlog(blogModel.id, blogModel);
  }

  Future<void> removeBlog(String blogId) async {
    return await blogApi.deleteBlog(blogId);
  }
}
